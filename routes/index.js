const express = require("express"),
  router = express.Router(),
  bcrypt = require("bcrypt"),
  saltRounds = 10,
  passport = require("passport");

const db = require("../db/db");

router.get("/", (req, res) => {
  res.render("index");
});

router.post(
  "/login",
  passport.authenticate("local", {
    successRedirect: "/stories",
    failureRedirect: "/login",
    failureFlash: true
  })
);

router.get("/login", (req, res) => {
  res.render("login", {
    page: "login",
    message: req.flash("error")
  });
});

router.get("/register", (req, res) => {
  res.render("register", {
    page: "register"
  });
});

router.post("/register", (req, res) => {
  const username = req.body.rUsername,
    email = req.body.rEmail,
    password = req.body.rPassword;

  const sql = "INSERT INTO users (username, email, password) VALUES(?, ?, ?)";

  bcrypt.hash(password, saltRounds, function(err, hashPassword) {
    db.query(sql, [username, email, hashPassword], (err, results, fields) => {
      if (err) throw err;
      const sql2 = "SELECT id, username FROM users WHERE id = ?";
      db.query(sql2, [results.insertId], (err, user) => {
        if (err) throw err;
        const registeredUser = {
          user_id: user[0].id,
          username: user[0].username
        };
        req.login(registeredUser, err => {
          res.redirect("/stories");
        }); // passport login function
      });
    });
  });
});

router.get("/logout", (req, res) => {
  req.logout(); // passport logout method
  req.session.destroy(function(err) {
    if (err) return next(err);
    res.clearCookie("connect.sid"); // delete cookie generated by passport
    res.redirect("/stories");
  });
});

passport.serializeUser(function(user, done) {
  done(null, user);
});

passport.deserializeUser(function(user, done) {
  done(null, user);
});

function isLoggedIn(req, res, next) {
  if (req.isAuthenticated()) return next();
  res.redirect("/login");
}

module.exports = router;
